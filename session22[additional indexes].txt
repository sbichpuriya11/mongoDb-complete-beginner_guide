
C:\Users\Somil>mongosh
Current Mongosh Log ID: 663747432895da404246b798
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.5
Using MongoDB:          7.0.8
Using Mongosh:          2.2.5

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2024-05-03T09:56:00.605+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> use college
switched to db college
college> show collections
students
college> db.students.find()
[
  {
    _id: ObjectId('6633b114fd8c83393e46b799'),
    name: 'John Doe',
    age: 23,
    major: 'Computer Science',
    year: 2,
    courses: [
      'Introduction to Programming',
      'Database Management',
      'Data Structures'
    ],
    gpa: 3.9,
    result: 'Exempted & Promoted',
    attempt: 3
  },
  {
    _id: ObjectId('6633b174fd8c83393e46b79a'),
    name: 'Alice Smith',
    age: 21,
    major: 'Biology',
    year: 3,
    courses: [ 'Genetics', 'Cell Biology', 'Biochemistry' ],
    gpa: 3.5,
    hometown: 'New York',
    gender: 'Female'
  },
  {
    _id: ObjectId('6633b174fd8c83393e46b79b'),
    name: 'Bob Johnson',
    age: 22,
    major: 'Economics',
    year: 4,
    courses: [ 'Microeconomics', 'Macroeconomics', 'Game Theory' ],
    gpa: 3.7,
    hometown: 'Chicago',
    gender: 'Male'
  },
  {
    _id: ObjectId('6633b174fd8c83393e46b79c'),
    name: 'Emily Brown',
    age: 20,
    major: 'Psychology',
    year: 2,
    courses: [
      'Introduction to Psychology',
      'Cognitive Psychology',
      'Abnormal Psychology'
    ],
    gpa: 3.9,
    hometown: 'Los Angeles',
    gender: 'Female',
    result: 'Exempted & Promoted',
    attempt: 3
  },
  {
    _id: ObjectId('6633b174fd8c83393e46b79d'),
    name: 'David Lee',
    age: 23,
    major: 'Engineering',
    year: 4,
    courses: [
      'Mechanical Engineering',
      'Electrical Engineering',
      'Computer-Aided Design'
    ],
    gpa: 3.6,
    hometown: 'San Francisco',
    gender: 'Male'
  },
  {
    _id: ObjectId('6633b174fd8c83393e46b79e'),
    name: 'Sophia Nguyen',
    age: 21,
    major: 'Art History',
    year: 3,
    courses: [ 'Ancient Art', 'Renaissance Art', 'Modern Art' ],
    gpa: 3.8,
    hometown: 'Boston',
    gender: 'Female'
  },
  {
    _id: ObjectId('6633b174fd8c83393e46b79f'),
    name: 'Michael Wilson',
    age: 22,
    major: 'Political Science',
    year: 4,
    courses: [
      'International Relations',
      'Comparative Politics',
      'Public Policy'
    ],
    gpa: 3.4,
    hometown: 'Washington D.C.',
    gender: 'Male'
  },
  {
    _id: ObjectId('6633b174fd8c83393e46b7a0'),
    name: 'Olivia Martinez',
    age: 20,
    major: 'English Literature',
    year: 2,
    courses: [ 'Shakespeare', 'Victorian Literature', 'American Poetry' ],
    gpa: 3.7,
    hometown: 'Miami',
    gender: 'Female'
  },
  {
    _id: ObjectId('6633b174fd8c83393e46b7a1'),
    name: 'Daniel Kim',
    age: 21,
    major: 'Computer Science',
    year: 3,
    courses: [ 'Data Structures', 'Algorithms', 'Operating Systems' ],
    gpa: 3.9,
    hometown: 'Seattle',
    gender: 'Male',
    result: 'Exempted & Promoted',
    attempt: 3
  },
  {
    _id: ObjectId('6633b174fd8c83393e46b7a2'),
    name: 'Ava Garcia',
    age: 22,
    major: 'Sociology',
    year: 4,
    courses: [ 'Social Theory', 'Race and Ethnicity', 'Gender Studies' ],
    gpa: 3.6,
    hometown: 'Houston',
    gender: 'Female'
  },
  {
    _id: ObjectId('6633b174fd8c83393e46b7a3'),
    name: 'Matthew Brown',
    age: 23,
    major: 'Mathematics',
    year: 4,
    courses: [ 'Calculus', 'Linear Algebra', 'Number Theory' ],
    gpa: 3.8,
    hometown: 'Dallas',
    gender: 'Male'
  }
]
college> db.students.find({gender:'Male'}).explain()
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'college.students',
    indexFilterSet: false,
    parsedQuery: { gender: { '$eq': 'Male' } },
    queryHash: '4A54422A',
    planCacheKey: '4A54422A',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'COLLSCAN',
      filter: { gender: { '$eq': 'Male' } },
      direction: 'forward'
    },
    rejectedPlans: []
  },
  command: { find: 'students', filter: { gender: 'Male' }, '$db': 'college' },
  serverInfo: {
    host: 'DESKTOP-FLFBCLR',
    port: 27017,
    version: '7.0.8',
    gitVersion: 'c5d33e55ba38d98e2f48765ec4e55338d67a4a64'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted'
  },
  ok: 1
}
college> db.students.find({gender:'Male'}).explain('executionStats')
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'college.students',
    indexFilterSet: false,
    parsedQuery: { gender: { '$eq': 'Male' } },
    queryHash: '4A54422A',
    planCacheKey: '4A54422A',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'COLLSCAN',
      filter: { gender: { '$eq': 'Male' } },
      direction: 'forward'
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 5,
    executionTimeMillis: 0,
    totalKeysExamined: 0,
    totalDocsExamined: 11,
    executionStages: {
      stage: 'COLLSCAN',
      filter: { gender: { '$eq': 'Male' } },
      nReturned: 5,
      executionTimeMillisEstimate: 0,
      works: 12,
      advanced: 5,
      needTime: 6,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      direction: 'forward',
      docsExamined: 11
    }
  },
  command: { find: 'students', filter: { gender: 'Male' }, '$db': 'college' },
  serverInfo: {
    host: 'DESKTOP-FLFBCLR',
    port: 27017,
    version: '7.0.8',
    gitVersion: 'c5d33e55ba38d98e2f48765ec4e55338d67a4a64'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted'
  },
  ok: 1
}
college> db.students.find({gender:'Male'}).explain('executionStats')
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'college.students',
    indexFilterSet: false,
    parsedQuery: { gender: { '$eq': 'Male' } },
    queryHash: '4A54422A',
    planCacheKey: '4A54422A',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'COLLSCAN',
      filter: { gender: { '$eq': 'Male' } },
      direction: 'forward'
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 5,
    executionTimeMillis: 0,
    totalKeysExamined: 0,
    totalDocsExamined: 11,
    executionStages: {
      stage: 'COLLSCAN',
      filter: { gender: { '$eq': 'Male' } },
      nReturned: 5,
      executionTimeMillisEstimate: 0,
      works: 12,
      advanced: 5,
      needTime: 6,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      direction: 'forward',
      docsExamined: 11
    }
  },
  command: { find: 'students', filter: { gender: 'Male' }, '$db': 'college' },
  serverInfo: {
    host: 'DESKTOP-FLFBCLR',
    port: 27017,
    version: '7.0.8',
    gitVersion: 'c5d33e55ba38d98e2f48765ec4e55338d67a4a64'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted'
  },
  ok: 1
}
college> db.students.find({gender:'Male'}).explain()
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'college.students',
    indexFilterSet: false,
    parsedQuery: { gender: { '$eq': 'Male' } },
    queryHash: '4A54422A',
    planCacheKey: '4A54422A',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'COLLSCAN',
      filter: { gender: { '$eq': 'Male' } },
      direction: 'forward'
    },
    rejectedPlans: []
  },
  command: { find: 'students', filter: { gender: 'Male' }, '$db': 'college' },
  serverInfo: {
    host: 'DESKTOP-FLFBCLR',
    port: 27017,
    version: '7.0.8',
    gitVersion: 'c5d33e55ba38d98e2f48765ec4e55338d67a4a64'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted'
  },
  ok: 1
}
college> db.students.find({gender:'Male'}).explain('executionStats')
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'college.students',
    indexFilterSet: false,
    parsedQuery: { gender: { '$eq': 'Male' } },
    queryHash: '4A54422A',
    planCacheKey: '4A54422A',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'COLLSCAN',
      filter: { gender: { '$eq': 'Male' } },
      direction: 'forward'
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 5,
    executionTimeMillis: 0,
    totalKeysExamined: 0,
    totalDocsExamined: 11,
    executionStages: {
      stage: 'COLLSCAN',
      filter: { gender: { '$eq': 'Male' } },
      nReturned: 5,
      executionTimeMillisEstimate: 0,
      works: 12,
      advanced: 5,
      needTime: 6,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      direction: 'forward',
      docsExamined: 11
    }
  },
  command: { find: 'students', filter: { gender: 'Male' }, '$db': 'college' },
  serverInfo: {
    host: 'DESKTOP-FLFBCLR',
    port: 27017,
    version: '7.0.8',
    gitVersion: 'c5d33e55ba38d98e2f48765ec4e55338d67a4a64'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted'
  },
  ok: 1
}
college> show collection
MongoshInvalidInputError: [COMMON-10001] 'collection' is not a valid argument for "show".
college> show collections
students
college> db.students.createIndex({age:1})
age_1
college> db.students.getIndexes()
[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  { v: 2, key: { age: 1 }, name: 'age_1' }
]
college> db.students.dropIndex("age_1")
{ nIndexesWas: 2, ok: 1 }
college> db.students.getIndexes()
[ { v: 2, key: { _id: 1 }, name: '_id_' } ]
college> db.students.createIndex({age:1})
age_1
college> db.students.find({gender:'Male'}).explain('executionStats')
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'college.students',
    indexFilterSet: false,
    parsedQuery: { gender: { '$eq': 'Male' } },
    queryHash: '4A54422A',
    planCacheKey: '4A54422A',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'COLLSCAN',
      filter: { gender: { '$eq': 'Male' } },
      direction: 'forward'
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 5,
    executionTimeMillis: 0,
    totalKeysExamined: 0,
    totalDocsExamined: 11,
    executionStages: {
      stage: 'COLLSCAN',
      filter: { gender: { '$eq': 'Male' } },
      nReturned: 5,
      executionTimeMillisEstimate: 0,
      works: 12,
      advanced: 5,
      needTime: 6,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      direction: 'forward',
      docsExamined: 11
    }
  },
  command: { find: 'students', filter: { gender: 'Male' }, '$db': 'college' },
  serverInfo: {
    host: 'DESKTOP-FLFBCLR',
    port: 27017,
    version: '7.0.8',
    gitVersion: 'c5d33e55ba38d98e2f48765ec4e55338d67a4a64'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted'
  },
  ok: 1
}
college> db.students.dropIndex("age_1")
{ nIndexesWas: 2, ok: 1 }
college> db.students.getIndexes()
[ { v: 2, key: { _id: 1 }, name: '_id_' } ]
college> db.students.find({age:{$gt:25}}).explain('executionStats')
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'college.students',
    indexFilterSet: false,
    parsedQuery: { age: { '$gt': 25 } },
    queryHash: '757409C9',
    planCacheKey: '757409C9',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'COLLSCAN',
      filter: { age: { '$gt': 25 } },
      direction: 'forward'
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 0,
    executionTimeMillis: 1,
    totalKeysExamined: 0,
    totalDocsExamined: 11,
    executionStages: {
      stage: 'COLLSCAN',
      filter: { age: { '$gt': 25 } },
      nReturned: 0,
      executionTimeMillisEstimate: 0,
      works: 12,
      advanced: 0,
      needTime: 11,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      direction: 'forward',
      docsExamined: 11
    }
  },
  command: {
    find: 'students',
    filter: { age: { '$gt': 25 } },
    '$db': 'college'
  },
  serverInfo: {
    host: 'DESKTOP-FLFBCLR',
    port: 27017,
    version: '7.0.8',
    gitVersion: 'c5d33e55ba38d98e2f48765ec4e55338d67a4a64'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted'
  },
  ok: 1
}
college> db.students.find({age:{$gt:20}}).explain('executionStats')
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'college.students',
    indexFilterSet: false,
    parsedQuery: { age: { '$gt': 20 } },
    queryHash: '757409C9',
    planCacheKey: '757409C9',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'COLLSCAN',
      filter: { age: { '$gt': 20 } },
      direction: 'forward'
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 9,
    executionTimeMillis: 0,
    totalKeysExamined: 0,
    totalDocsExamined: 11,
    executionStages: {
      stage: 'COLLSCAN',
      filter: { age: { '$gt': 20 } },
      nReturned: 9,
      executionTimeMillisEstimate: 0,
      works: 12,
      advanced: 9,
      needTime: 2,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      direction: 'forward',
      docsExamined: 11
    }
  },
  command: {
    find: 'students',
    filter: { age: { '$gt': 20 } },
    '$db': 'college'
  },
  serverInfo: {
    host: 'DESKTOP-FLFBCLR',
    port: 27017,
    version: '7.0.8',
    gitVersion: 'c5d33e55ba38d98e2f48765ec4e55338d67a4a64'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted'
  },
  ok: 1
}
college> db.students.createIndex({age:1})
age_1
college> db.students.find({age:{$gt:20}}).explain('executionStats')
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'college.students',
    indexFilterSet: false,
    parsedQuery: { age: { '$gt': 20 } },
    queryHash: '757409C9',
    planCacheKey: 'E7830B2C',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'FETCH',
      inputStage: {
        stage: 'IXSCAN',
        keyPattern: { age: 1 },
        indexName: 'age_1',
        isMultiKey: false,
        multiKeyPaths: { age: [] },
        isUnique: false,
        isSparse: false,
        isPartial: false,
        indexVersion: 2,
        direction: 'forward',
        indexBounds: { age: [ '(20, inf.0]' ] }
      }
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 9,
    executionTimeMillis: 27,
    totalKeysExamined: 9,
    totalDocsExamined: 9,
    executionStages: {
      stage: 'FETCH',
      nReturned: 9,
      executionTimeMillisEstimate: 26,
      works: 10,
      advanced: 9,
      needTime: 0,
      needYield: 0,
      saveState: 1,
      restoreState: 1,
      isEOF: 1,
      docsExamined: 9,
      alreadyHasObj: 0,
      inputStage: {
        stage: 'IXSCAN',
        nReturned: 9,
        executionTimeMillisEstimate: 26,
        works: 10,
        advanced: 9,
        needTime: 0,
        needYield: 0,
        saveState: 1,
        restoreState: 1,
        isEOF: 1,
        keyPattern: { age: 1 },
        indexName: 'age_1',
        isMultiKey: false,
        multiKeyPaths: { age: [] },
        isUnique: false,
        isSparse: false,
        isPartial: false,
        indexVersion: 2,
        direction: 'forward',
        indexBounds: { age: [ '(20, inf.0]' ] },
        keysExamined: 9,
        seeks: 1,
        dupsTested: 0,
        dupsDropped: 0
      }
    }
  },
  command: {
    find: 'students',
    filter: { age: { '$gt': 20 } },
    '$db': 'college'
  },
  serverInfo: {
    host: 'DESKTOP-FLFBCLR',
    port: 27017,
    version: '7.0.8',
    gitVersion: 'c5d33e55ba38d98e2f48765ec4e55338d67a4a64'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted'
  },
  ok: 1
}
college> db.students.dropIndex('age_1')
{ nIndexesWas: 2, ok: 1 }
college> db.students.find({age:{$gt:20}, gender:'Male'}).explain('executionStats')
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'college.students',
    indexFilterSet: false,
    parsedQuery: {
      '$and': [ { gender: { '$eq': 'Male' } }, { age: { '$gt': 20 } } ]
    },
    queryHash: '384433B2',
    planCacheKey: '384433B2',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'COLLSCAN',
      filter: {
        '$and': [ { gender: { '$eq': 'Male' } }, { age: { '$gt': 20 } } ]
      },
      direction: 'forward'
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 5,
    executionTimeMillis: 0,
    totalKeysExamined: 0,
    totalDocsExamined: 11,
    executionStages: {
      stage: 'COLLSCAN',
      filter: {
        '$and': [ { gender: { '$eq': 'Male' } }, { age: { '$gt': 20 } } ]
      },
      nReturned: 5,
      executionTimeMillisEstimate: 0,
      works: 12,
      advanced: 5,
      needTime: 6,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      direction: 'forward',
      docsExamined: 11
    }
  },
  command: {
    find: 'students',
    filter: { age: { '$gt': 20 }, gender: 'Male' },
    '$db': 'college'
  },
  serverInfo: {
    host: 'DESKTOP-FLFBCLR',
    port: 27017,
    version: '7.0.8',
    gitVersion: 'c5d33e55ba38d98e2f48765ec4e55338d67a4a64'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted'
  },
  ok: 1
}
college> db.students.createIndex({age:1, gender:1})
age_1_gender_1
college> db.students.getIndexes()
[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  { v: 2, key: { age: 1, gender: 1 }, name: 'age_1_gender_1' }
]
college> db.students.find({age:{$gt:20}, gender:'Male'}).explain('executionStats')
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'college.students',
    indexFilterSet: false,
    parsedQuery: {
      '$and': [ { gender: { '$eq': 'Male' } }, { age: { '$gt': 20 } } ]
    },
    queryHash: '384433B2',
    planCacheKey: 'E5DC4D1E',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'FETCH',
      inputStage: {
        stage: 'IXSCAN',
        keyPattern: { age: 1, gender: 1 },
        indexName: 'age_1_gender_1',
        isMultiKey: false,
        multiKeyPaths: { age: [], gender: [] },
        isUnique: false,
        isSparse: false,
        isPartial: false,
        indexVersion: 2,
        direction: 'forward',
        indexBounds: { age: [ '(20, inf.0]' ], gender: [ '["Male", "Male"]' ] }
      }
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 5,
    executionTimeMillis: 16,
    totalKeysExamined: 8,
    totalDocsExamined: 5,
    executionStages: {
      stage: 'FETCH',
      nReturned: 5,
      executionTimeMillisEstimate: 10,
      works: 9,
      advanced: 5,
      needTime: 3,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      docsExamined: 5,
      alreadyHasObj: 0,
      inputStage: {
        stage: 'IXSCAN',
        nReturned: 5,
        executionTimeMillisEstimate: 10,
        works: 9,
        advanced: 5,
        needTime: 3,
        needYield: 0,
        saveState: 0,
        restoreState: 0,
        isEOF: 1,
        keyPattern: { age: 1, gender: 1 },
        indexName: 'age_1_gender_1',
        isMultiKey: false,
        multiKeyPaths: { age: [], gender: [] },
        isUnique: false,
        isSparse: false,
        isPartial: false,
        indexVersion: 2,
        direction: 'forward',
        indexBounds: { age: [ '(20, inf.0]' ], gender: [ '["Male", "Male"]' ] },
        keysExamined: 8,
        seeks: 4,
        dupsTested: 0,
        dupsDropped: 0
      }
    }
  },
  command: {
    find: 'students',
    filter: { age: { '$gt': 20 }, gender: 'Male' },
    '$db': 'college'
  },
  serverInfo: {
    host: 'DESKTOP-FLFBCLR',
    port: 27017,
    version: '7.0.8',
    gitVersion: 'c5d33e55ba38d98e2f48765ec4e55338d67a4a64'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted'
  },
  ok: 1
}
college> db.students.find({age:{$gt:20}).explain('executionStats')
Uncaught:
SyntaxError: Unexpected token, expected "," (1:30)

> 1 | db.students.find({age:{$gt:20}).explain('executionStats')
    |                               ^
  2 |

college> db.students.find({age:{$gt:20}}).explain('executionStats')
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'college.students',
    indexFilterSet: false,
    parsedQuery: { age: { '$gt': 20 } },
    queryHash: '757409C9',
    planCacheKey: 'E7830B2C',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'FETCH',
      inputStage: {
        stage: 'IXSCAN',
        keyPattern: { age: 1, gender: 1 },
        indexName: 'age_1_gender_1',
        isMultiKey: false,
        multiKeyPaths: { age: [], gender: [] },
        isUnique: false,
        isSparse: false,
        isPartial: false,
        indexVersion: 2,
        direction: 'forward',
        indexBounds: { age: [ '(20, inf.0]' ], gender: [ '[MinKey, MaxKey]' ] }
      }
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 9,
    executionTimeMillis: 0,
    totalKeysExamined: 9,
    totalDocsExamined: 9,
    executionStages: {
      stage: 'FETCH',
      nReturned: 9,
      executionTimeMillisEstimate: 0,
      works: 10,
      advanced: 9,
      needTime: 0,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      docsExamined: 9,
      alreadyHasObj: 0,
      inputStage: {
        stage: 'IXSCAN',
        nReturned: 9,
        executionTimeMillisEstimate: 0,
        works: 10,
        advanced: 9,
        needTime: 0,
        needYield: 0,
        saveState: 0,
        restoreState: 0,
        isEOF: 1,
        keyPattern: { age: 1, gender: 1 },
        indexName: 'age_1_gender_1',
        isMultiKey: false,
        multiKeyPaths: { age: [], gender: [] },
        isUnique: false,
        isSparse: false,
        isPartial: false,
        indexVersion: 2,
        direction: 'forward',
        indexBounds: { age: [ '(20, inf.0]' ], gender: [ '[MinKey, MaxKey]' ] },
        keysExamined: 9,
        seeks: 1,
        dupsTested: 0,
        dupsDropped: 0
      }
    }
  },
  command: {
    find: 'students',
    filter: { age: { '$gt': 20 } },
    '$db': 'college'
  },
  serverInfo: {
    host: 'DESKTOP-FLFBCLR',
    port: 27017,
    version: '7.0.8',
    gitVersion: 'c5d33e55ba38d98e2f48765ec4e55338d67a4a64'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted'
  },
  ok: 1
}
college> db.students.find({gender:'Female'}).explain('executionStats')
{
  explainVersion: '1',
  queryPlanner: {
    namespace: 'college.students',
    indexFilterSet: false,
    parsedQuery: { gender: { '$eq': 'Female' } },
    queryHash: '4A54422A',
    planCacheKey: 'BBD98FFE',
    maxIndexedOrSolutionsReached: false,
    maxIndexedAndSolutionsReached: false,
    maxScansToExplodeReached: false,
    winningPlan: {
      stage: 'COLLSCAN',
      filter: { gender: { '$eq': 'Female' } },
      direction: 'forward'
    },
    rejectedPlans: []
  },
  executionStats: {
    executionSuccess: true,
    nReturned: 5,
    executionTimeMillis: 0,
    totalKeysExamined: 0,
    totalDocsExamined: 11,
    executionStages: {
      stage: 'COLLSCAN',
      filter: { gender: { '$eq': 'Female' } },
      nReturned: 5,
      executionTimeMillisEstimate: 0,
      works: 12,
      advanced: 5,
      needTime: 6,
      needYield: 0,
      saveState: 0,
      restoreState: 0,
      isEOF: 1,
      direction: 'forward',
      docsExamined: 11
    }
  },
  command: { find: 'students', filter: { gender: 'Female' }, '$db': 'college' },
  serverInfo: {
    host: 'DESKTOP-FLFBCLR',
    port: 27017,
    version: '7.0.8',
    gitVersion: 'c5d33e55ba38d98e2f48765ec4e55338d67a4a64'
  },
  serverParameters: {
    internalQueryFacetBufferSizeBytes: 104857600,
    internalQueryFacetMaxOutputDocSizeBytes: 104857600,
    internalLookupStageIntermediateDocumentMaxSizeBytes: 104857600,
    internalDocumentSourceGroupMaxMemoryBytes: 104857600,
    internalQueryMaxBlockingSortMemoryUsageBytes: 104857600,
    internalQueryProhibitBlockingMergeOnMongoS: 0,
    internalQueryMaxAddToSetBytes: 104857600,
    internalDocumentSourceSetWindowFieldsMaxMemoryBytes: 104857600,
    internalQueryFrameworkControl: 'trySbeRestricted'
  },
  ok: 1
}
college> db.students.createIndex({age:1},{partial:{age:{$gt:15}}})
age_1
college> db.students.showIndex()
TypeError: db.students.showIndex is not a function
college> db.students.getIndex()
db.students.getIndexes     db.students.getIndexSpecs
db.students.getIndexKeys

college> db.students.getIndex()
TypeError: db.students.getIndex is not a function
college> db.students.getIndexes()
[
  { v: 2, key: { _id: 1 }, name: '_id_' },
  { v: 2, key: { age: 1, gender: 1 }, name: 'age_1_gender_1' },
  { v: 2, key: { age: 1 }, name: 'age_1' }
]
college> db.students
